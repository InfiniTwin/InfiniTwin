using [UI]
using [UI].Layout
using [UI].Widgets
using [UI].Styles
using [UI].Elements
using [CORE]
using [CORE].Actions

const iconWindow: "e6fa" // Select Window
const labelWindow: "IT::Window"
const labelLayers: "IT::Layers"
const labelHierarchy: "IT::Hierarchy"
const labelAttributes: "IT::Attributes"

const iconLanguage: "e894" // Language
const labelEnglish: "English"
const labelGerman: "Deutsch"
const labelItalian: "Italiano"

[UI].ViewportMain {
    Viewport
    ToolbarTop: IsConstraintCanvas {
        Content: StyleBorderSurfaceLowest, VAlignTop, HAlignFill, PaddingNone {
            Top: IsHBox, AlignFill, PaddingNone {
                Left: IsHBox, FillWidthOne, AlignCenterLeft, PaddingNone {
                    MenuWindows: MenuBelow, AlignCenterLeft, PaddingNone {
                        ToggleWindow: ElementToggleIconText {
                            Container.Icon {Icon: {$iconWindow}}
                            Container.Label {Text: {$labelWindow}}
                            ActionMenuOpen: ActionWidgetOpen {(CheckBoxState, Checked)}
                            ActionMenuClose: ActionWidgetClose {(CheckBoxState, Unchecked)}
                        }
                        Content: VMenuContent {
                            Container {
                                Layers: ElementCheckBox {
                                    Container.Label {Text: {$labelLayers}}
                                    Window: IsWindow {
                                        Text: {$labelLayers}
                                        ActionOpenContent {Script: {"UI/IT/WindowLayers"}}
                                    }
                                    ActionWindowOpen: ActionWindowOpen {(CheckBoxState, Checked)}
                                }
                                Hierarchy: ElementCheckBox {
                                    Container.Label {Text: {$labelHierarchy}}
                                    Window: IsWindow {Text: {
                                        $labelHierarchy}
                                        ActionOpenContent {Script: {"UI/IT/WindowHierarchy"}}
                                    }
                                    ActionWindowOpen: ActionWindowOpen {(CheckBoxState, Checked)}
                                }
                                Attributes: ElementCheckBox {
                                    Container.Label {Text: {$labelAttributes}}
                                    Window: IsWindow {Text: {
                                        $labelAttributes}
                                        ActionOpenContent {Script: {"UI/IT/WindowAttributes"}}
                                    }
                                    ActionWindowOpen: ActionWindowOpen {(CheckBoxState, Checked)}
                                }
                                Layers {(CheckBoxState, Unchecked)}
                                Hierarchy {(CheckBoxState, Unchecked)}
                                Attributes {(CheckBoxState, Unchecked)}
                            }
                        }
                    }
                }
                Right: IsHBox, FillWidthOne, AlignCenterRight, PaddingNone {
                    MenuLanguages: MenuBelowRight, AlignCenterRight, PaddingNone {
                        ToggleMenuLanguage: ElementToggleIcon {
                            Container.Icon {Icon: {$iconLanguage}}
                            ActionMenuOpen: ActionWidgetOpen {(CheckBoxState, Checked)}
                            ActionMenuClose: ActionWidgetClose {(CheckBoxState, Unchecked)}
                        }
                        Content: VMenuContent {
                            Container {
                                English: ElementRadio {
                                    Container.Label {Text: {$labelEnglish}}
                                    ActionLanguageEN: ActionSetLanguage {}
                                }
                                German: ElementRadio {
                                    Container.Label {Text: {$labelGerman}}
                                    ActionLanguageDE: ActionSetLanguage {Code: {"using [UI]\\n\\n\$ < | Locale: <\"de\">"}}
                                }
                                Italian: ElementRadio {
                                    Container.Label {Text: {$labelItalian}}
                                    ActionLanguageIT: ActionSetLanguage {Code: {"using [UI]\\n\\n\$ < | Locale: <\"it\">"}}
                                }
                                English {(CheckBoxState, Checked)}
                                German {(CheckBoxState, Unchecked)}
                                Italian {(CheckBoxState, Unchecked)}
                            }
                        }
                    }
                }
            }
        }
    }
}
